name: Secret Scan

on: [push, pull_request]

permissions:
  contents: read
  security-events: write   # needed for SARIF upload to Code Scanning

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Gitleaks (produces SARIF) ---
      - name: Install Gitleaks
        run: |
          curl -sSL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | bash
          echo "$PWD" >> $GITHUB_PATH
      - name: Run Gitleaks
        run: |
          gitleaks detect --source . --report-format sarif --report-path gitleaks-results.sarif || true

      - name: Upload SARIF to Code Scanning
        if: hashFiles('gitleaks-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-results.sarif

      # --- detect-secrets baseline compare (fails if new secrets appear) ---
      - name: Detect-Secrets (baseline compare)
        run: |
          pipx install detect-secrets
          detect-secrets scan --exclude-files '(\.venv|node_modules|dist|build|\.git|agentic-api/test\.db)' > .secrets.tmp
          python - <<'PY'
          import json, sys, os
          if not os.path.exists('.secrets.baseline'):
              print("No .secrets.baseline found; skipping baseline compare (pass).")
              sys.exit(0)
          with open('.secrets.tmp') as f: cur=json.load(f)
          if cur.get('results'):
              print("Potential secrets detected. See .secrets.tmp")
